import { GraphQLSchema } from 'graphql';
import { BaseGeneratedListTypes, BaseKeystoneList, KeystoneListsAPI, KeystoneContext } from '@keystone-next/types';
export declare function getArgsFactory(list: BaseKeystoneList, schema: GraphQLSchema): {
    findOne: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    findMany: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    count: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    createOne: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    createMany: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    updateOne: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    updateMany: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    deleteOne: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
    deleteMany: ((args: Record<string, any>) => {
        [key: string]: any;
    }) | undefined;
};
export declare function itemAPIForList(list: BaseKeystoneList, context: KeystoneContext, getArgs: ReturnType<typeof getArgsFactory>): KeystoneListsAPI<Record<string, BaseGeneratedListTypes>>[string];
