"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.wouldYouLikeToCreateANewIssue = exports.getGithubIssueUrl = void 0;
const new_github_issue_url_1 = __importDefault(require("new-github-issue-url"));
const open_1 = __importDefault(require("open"));
const prompts_1 = __importDefault(require("prompts"));
const strip_ansi_1 = __importDefault(require("strip-ansi"));
const get_platform_1 = require("@prisma/get-platform");
function getGithubIssueUrl({ title, user = 'prisma', repo = 'prisma', template = 'bug_report.md', body, }) {
    return new_github_issue_url_1.default({
        user,
        repo,
        template,
        title,
        body,
    });
}
exports.getGithubIssueUrl = getGithubIssueUrl;
async function wouldYouLikeToCreateANewIssue(options) {
    var _a;
    let shouldCreateNewIssue;
    if (options.prompt) {
        shouldCreateNewIssue = await prompts_1.default({
            type: 'select',
            name: 'value',
            message: 'Would you like to create a Github issue?',
            initial: 0,
            choices: [
                {
                    title: 'Yes',
                    value: true,
                    description: `Create a new GitHub issue`,
                },
                {
                    title: 'No',
                    value: false,
                    description: `Don't create a new GitHub issue`,
                },
            ],
        });
    }
    else {
        shouldCreateNewIssue = { value: true };
    }
    if (shouldCreateNewIssue.value) {
        const platform = await get_platform_1.getPlatform();
        const url = getGithubIssueUrl({
            title: (_a = options.title) !== null && _a !== void 0 ? _a : '',
            body: issueTemplate(platform, options),
        });
        await open_1.default(url);
    }
}
exports.wouldYouLikeToCreateANewIssue = wouldYouLikeToCreateANewIssue;
const issueTemplate = (platform, options) => {
    return strip_ansi_1.default(`
Hi Prisma Team! Prisma Migrate just crashed. ${options.reportId
        ? `This is the report:
  Report Id: ${options.reportId}`
        : ''}

## Command

\`${options.command}\`

## Versions
      
| Name        | Version            |
|-------------|--------------------|
| Platform    | ${platform.padEnd(19)}| 
| Node        | ${process.version.padEnd(19)}| 
| Prisma CLI  | ${options.cliVersion.padEnd(19)}| 
| Binary      | ${options.binaryVersion.padEnd(19)}| 

## Error
\`\`\`
${options.error}
\`\`\`

`);
};
//# sourceMappingURL=getGithubIssueUrl.js.map