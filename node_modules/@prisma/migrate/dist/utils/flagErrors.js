"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EarlyAccessFeatureFlagWithNewMigrateError = exports.ExperimentalFlagWithNewMigrateError = exports.EarlyAcessFlagError = exports.PreviewFlagError = exports.ExperimentalFlagError = void 0;
const chalk_1 = __importDefault(require("chalk"));
class ExperimentalFlagError extends Error {
    constructor() {
        super(`Please provide the ${chalk_1.default.green('--experimental')} flag to use this command.`);
    }
}
exports.ExperimentalFlagError = ExperimentalFlagError;
class PreviewFlagError extends Error {
    constructor() {
        super(`This feature is currently in Preview. There may be bugs and it's not recommended to use it in production environments.
Please provide the ${chalk_1.default.green('--preview-feature')} flag to use this command.`);
    }
}
exports.PreviewFlagError = PreviewFlagError;
class EarlyAcessFlagError extends Error {
    constructor() {
        super(`This feature is currently in Early Access. There may be bugs and it's not recommended to use it in production environments.
Please provide the ${chalk_1.default.green('--early-access-feature')} flag to use this command.`);
    }
}
exports.EarlyAcessFlagError = EarlyAcessFlagError;
class ExperimentalFlagWithNewMigrateError extends Error {
    constructor() {
        super(`Prisma Migrate was Experimental and is now Generally Available.
${chalk_1.default.yellow('WARNING this new version has some breaking changes')} to use it it's recommended to read the documentation first and remove the ${chalk_1.default.red('--experimental')} flag.`);
    }
}
exports.ExperimentalFlagWithNewMigrateError = ExperimentalFlagWithNewMigrateError;
class EarlyAccessFeatureFlagWithNewMigrateError extends Error {
    constructor() {
        super(`Prisma Migrate was in Early Access and is now in Preview.
Replace the ${chalk_1.default.red('--early-access-feature')} flag with ${chalk_1.default.green('--preview-feature')}.`);
    }
}
exports.EarlyAccessFeatureFlagWithNewMigrateError = EarlyAccessFeatureFlagWithNewMigrateError;
//# sourceMappingURL=flagErrors.js.map