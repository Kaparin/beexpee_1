"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tearDownPostgres = exports.setupPostgres = void 0;
const sdk_1 = require("@prisma/sdk");
const pg_1 = require("pg");
async function setupPostgres(options) {
    const { connectionString } = options;
    // const { dirname } = options
    // const schema = fs.readFileSync(path.join(dirname, 'setup.sql'), 'utf-8')
    await sdk_1.createDatabase(connectionString).catch((e) => console.error(e));
    const db = new pg_1.Client({
        connectionString: connectionString,
    });
    await db.connect();
    // await db.query(schema)
    await db.end();
}
exports.setupPostgres = setupPostgres;
async function tearDownPostgres(options) {
    const { connectionString } = options;
    const credentials = sdk_1.uriToCredentials(connectionString);
    const credentialsClone = { ...credentials };
    credentialsClone.database = 'postgres';
    credentialsClone.schema = '';
    const connectionStringCopy = sdk_1.credentialsToUri(credentialsClone);
    const db = new pg_1.Client({
        connectionString: connectionStringCopy,
    });
    await db.connect();
    await db.query(`DROP DATABASE IF EXISTS "${credentials.database}";`);
    await db.end();
}
exports.tearDownPostgres = tearDownPostgres;
//# sourceMappingURL=setupPostgres.js.map