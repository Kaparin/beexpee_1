"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.printDatamodelObject = exports.printDatasources = void 0;
// This is copied from prisma-client-js/runtime/utils. It needs to be moved into a separate package
const indent_string_1 = __importDefault(require("indent-string"));
function printDatasources(internalDatasources) {
    return internalDatasources
        .map((d) => String(new InternalDataSourceClass(d)))
        .join('\n\n');
}
exports.printDatasources = printDatasources;
const tab = 2;
class InternalDataSourceClass {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    toString() {
        const { dataSource } = this;
        const obj = {
            provider: dataSource.provider,
            url: dataSource.url,
        };
        if (dataSource.config && typeof dataSource.config === 'object') {
            Object.assign(obj, dataSource.config);
        }
        return `datasource ${dataSource.name} {
${indent_string_1.default(printDatamodelObject(obj), tab)}
}`;
    }
}
function printDatamodelObject(obj) {
    const maxLength = Object.keys(obj).reduce((max, curr) => Math.max(max, curr.length), 0);
    return Object.entries(obj)
        .map(([key, value]) => `${key.padEnd(maxLength)} = ${typeof value === 'object' && value && value.value
        ? JSON.stringify(value.value)
        : JSON.stringify(value)}`)
        .join('\n');
}
exports.printDatamodelObject = printDatamodelObject;
//# sourceMappingURL=printDatasources.js.map