"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMigrationName = void 0;
const prompts_1 = require("prompts");
const sdk_1 = require("@prisma/sdk");
const slugify_1 = __importDefault(require("@sindresorhus/slugify"));
async function getMigrationName(name) {
    var _a;
    // Truncate if longer
    const maxMigrationNameLength = 200;
    if (name) {
        return {
            name: slugify_1.default(name, { separator: '_' }).substring(0, maxMigrationNameLength),
        };
    }
    // We use prompts.inject() for testing in our CI
    else if (sdk_1.isCi() && Boolean((_a = prompts_1.prompt._injected) === null || _a === void 0 ? void 0 : _a.length) === false) {
        return {
            name: '',
        };
    }
    const response = await prompts_1.prompt({
        type: 'text',
        name: 'name',
        message: `Name of migration`,
    });
    if (!('name' in response)) {
        return {
            userCancelled: 'Canceled by user.',
        };
    }
    return {
        name: slugify_1.default(response.name, { separator: '_' }).substring(0, maxMigrationNameLength) || '',
    };
}
exports.getMigrationName = getMigrationName;
//# sourceMappingURL=promptForMigrationName.js.map